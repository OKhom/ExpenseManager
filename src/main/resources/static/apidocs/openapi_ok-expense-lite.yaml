openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/users/id:
    get:
      tags:
        - user-controller
      operationId: getUser
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
    put:
      tags:
        - user-controller
      operationId: editUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
  /api/transaction/{transactionId}/category/{categoryId}:
    get:
      tags:
        - transaction-controller
      operationId: getTransactionById
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionDTO'
    put:
      tags:
        - transaction-controller
      operationId: updateTransaction
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionDTO'
    delete:
      tags:
        - transaction-controller
      operationId: removeTransaction
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultDTO'
  /api/transaction/{transactionId}/category/{categoryId}/subcategory/{subcategoryId}:
    put:
      tags:
        - transaction-controller
      operationId: updateTransaction_1
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: subcategoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionDTO'
  /api/category/{categoryId}:
    get:
      tags:
        - category-controller
      operationId: getCategoryById
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CategoryDTO'
    put:
      tags:
        - category-controller
      operationId: updateCategory
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CategoryDTO'
  /api/category/{categoryId}/subcategory/{subcategoryId}:
    get:
      tags:
        - category-controller
      operationId: getSubcategoryById
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: subcategoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubcategoryDTOext'
    put:
      tags:
        - category-controller
      operationId: updateSubcategory
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: subcategoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubcategoryDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubcategoryDTOext'
    delete:
      tags:
        - category-controller
      operationId: removeSubcategory
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: subcategoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultDTO'
  /api/category/{categoryId}/budget/{year}/{month}:
    get:
      tags:
        - budget-controller
      operationId: getBudgetByDate
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: year
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: month
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BudgetDTO'
    put:
      tags:
        - budget-controller
      operationId: updateBudgetByDate
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: year
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: month
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BudgetDTO'
    post:
      tags:
        - budget-controller
      operationId: addBudget
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: year
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: month
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BudgetDTO'
    delete:
      tags:
        - budget-controller
      operationId: removeBudget
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: year
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: month
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: boolean
  /api/admin/currency/{currencyId}:
    get:
      tags:
        - admin-controller
      operationId: currencyById
      parameters:
        - name: currencyId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CurrencyDTO'
    put:
      tags:
        - admin-controller
      operationId: editCurrency
      parameters:
        - name: currencyId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CurrencyDTO'
  /api/users/register:
    post:
      tags:
        - user-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
  /api/users/auth:
    post:
      tags:
        - user-controller
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenDTO'
  /api/transaction/category/{categoryId}:
    get:
      tags:
        - transaction-controller
      operationId: getAllTransactions
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDTO'
    post:
      tags:
        - transaction-controller
      operationId: addTransaction
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionDTO'
  /api/transaction/category/{categoryId}/subcategory/{subcategoryId}:
    post:
      tags:
        - transaction-controller
      operationId: addTransactionWithSubcategory
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: subcategoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionDTO'
  /api/category/{categoryType}:
    post:
      tags:
        - category-controller
      operationId: addCategory
      parameters:
        - name: categoryType
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CategoryDTO'
  /api/category/{categoryId}/subcategory:
    get:
      tags:
        - category-controller
      operationId: getSubcategories
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubcategoryDTOext'
    post:
      tags:
        - category-controller
      operationId: addSubcategory
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubcategoryDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubcategoryDTOext'
  /api/admin/currency:
    post:
      tags:
        - admin-controller
      operationId: addCurrency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CurrencyDTO'
  /api/transaction/{year}/{month}:
    get:
      tags:
        - transaction-controller
      operationId: getTransactionsByDate
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: month
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDTO'
  /api/category:
    get:
      tags:
        - category-controller
      operationId: getAllCategories
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryDTO'
  /api/category/{year}/{month}/type/{categoryType}:
    get:
      tags:
        - category-controller
      operationId: getCategoryByTypeAndDate
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: month
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: categoryType
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryDTO'
  /api/category/{categoryId}/budget:
    get:
      tags:
        - budget-controller
      operationId: getAllBudgets
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BudgetDTO'
  /api/category/currency:
    get:
      tags:
        - category-controller
      operationId: fetchAllCurrencies
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyDTO'
  /api/category/currency/{currencyId}:
    get:
      tags:
        - category-controller
      operationId: fetchCurrencyById
      parameters:
        - name: currencyId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CurrencyDTO'
  /api/category/amount/{year}/{month}:
    get:
      tags:
        - category-controller
      operationId: getTotalAmountByDate
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: month
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AmountDTO'
  /api/admin/users/search/{pattern}:
    get:
      tags:
        - admin-controller
      operationId: findUsersByPattern
      parameters:
        - name: pattern
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
  /api/admin/users/page/{page}:
    get:
      tags:
        - admin-controller
      operationId: usersList_1
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
  /api/admin/id:
    get:
      tags:
        - admin-controller
      operationId: getUser_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
  /api/admin/currency/search/{pattern}:
    get:
      tags:
        - admin-controller
      operationId: findCurrenciesByPattern
      parameters:
        - name: pattern
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyDTO'
  /api/admin/currency/page/{page}:
    get:
      tags:
        - admin-controller
      operationId: currenciesList_1
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyDTO'
  /api/admin/count:
    get:
      tags:
        - admin-controller
      operationId: countUsers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCountDTO'
components:
  schemas:
    UserDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        currencyId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        currencyName:
          type: string
        currencyShortName:
          type: string
        role:
          type: string
          enum:
            - ROLE_ADMIN
            - ROLE_USER
    TransactionDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        transactionId:
          type: integer
          format: int64
        subcategoryId:
          type: integer
          format: int64
        date:
          type: string
          format: date
        categoryName:
          type: string
        amount:
          type: number
          format: double
        currencySign:
          type: string
        subcategory:
          type: string
        note:
          type: string
        type:
          type: string
          enum:
            - EXPENSE
            - INCOME
    CategoryDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - EXPENSE
            - INCOME
        name:
          type: string
        description:
          type: string
        currencyId:
          type: integer
          format: int64
        currencySign:
          type: string
        totalExpense:
          type: number
          format: double
        budget:
          type: number
          format: double
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/SubcategoryDTO'
    SubcategoryDTO:
      type: object
      properties:
        subcategoryId:
          type: integer
          format: int64
        subname:
          type: string
    SubcategoryDTOext:
      type: object
      properties:
        subcategoryId:
          type: integer
          format: int64
        subname:
          type: string
        userId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
    BudgetDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        year:
          type: integer
          format: int32
        month:
          type: integer
          format: int32
        budget:
          type: number
          format: double
    CurrencyDTO:
      type: object
      properties:
        currencyId:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        sign:
          type: string
    TokenDTO:
      type: object
      properties:
        token:
          type: string
    AmountDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        currencyId:
          type: integer
          format: int64
        year:
          type: integer
          format: int32
        month:
          type: integer
          format: int32
        currencySign:
          type: string
        amountIncome:
          type: number
          format: double
        amountExpense:
          type: number
          format: double
    PageCountDTO:
      type: object
      properties:
        count:
          type: integer
          format: int64
        countCurrencies:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int32
    ResultDTO:
      type: object
      properties:
        success:
          type: boolean
    CategoryDeleteDTO:
      type: object
      properties:
        deleteWithAllTransaction:
          type: boolean
